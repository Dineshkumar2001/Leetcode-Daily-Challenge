class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string, int> freq, topk;
        auto comp= [&](const pair<string, int> & v1,const pair<string,int> &v2) {
            return v1.second>v2.second || (v1.first<v2.first && v1.second==v2.second);
            };
        set<pair<string,int>, decltype(comp)> s(comp);
        for(auto &w:words){
            freq[w]++;
            auto it = s.find({w,freq[w]-1});
            if(it!=s.end())s.erase(it);
            s.emplace(w,freq[w]);
            if(s.size()>k)s.erase(--s.end());
        }
        vector<string>res;
        for(auto&e:s)res.push_back(e.first);
        return res; 
    }
};
